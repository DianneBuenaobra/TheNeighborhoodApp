<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddMessage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DwAACw8BkvkDpQAAA+dJREFUWEfVmUlME2EUx6smLonL3eVixMTtICc4ahBPruBBEu/q1ZgoEoi4JYgg
        BAIqclBwuyNLWVxYjnjRsCVARFpskS4209IyI/9Jhkyn/5n0q9NWDz/Svnnf+/4zzPe+9706FEWxhXBU
        3jzmiR4ZnAkXOCelMwCfxz3Rw7jGxqQCNSZDJCZv6p6Qzt3qWWoueP5zbF/13Mreh/MKA9fgU9bja+qZ
        lM4ux+SNLGYyUKMV84HYnjv9/trcOvciE5cMGHu331/jCsR2szmsoEZGICzvuN3rr8upcUWYiFRALAgP
        RuTtbE4GNRr5OB0+mdfonmeT2kF+08KPzzPhE2xuI9SoISvKuprBQKXV+2kXmKNuKFiBOZkWDWoEMVnZ
        cL3T18qCp5Mbnb4WzM00AWrEXWIgC5gJrnX8emH2pBMMAK8BC5RJ6oeD5UxbgmF4NnI8p2ouxoJkErzT
        n6bDhUZ9cV+QXtKZDUTJb1yY+x2Rt+k1xgmu7PM/ZgOzyb0B/yO9xrUP2MHs2BQuvVt0dk1I50HJG28f
        8xFhf7Ur7A7GdiUItuPpFr/yDq7IynotJtJTUbt3mPmKoH/K6h8UMn9TG2i0jYauaIE1Xo6GrjJfEXIb
        3F6tYFKDoupijqJ0jEkX9GIBbMxXFOeUdBrx1KCl3UtPmJMo6RRc7vQ1Ip4aFLUqcxIlnYILW93fEM8h
        ReUtdhU36RSMzQwnFweONczBitWVP9T+JXQZYvSwghw2ox8WJ2Kw2FZMeKKH1K2YXTQDeVafulIFMUTz
        9Mhs5JgDh0V20QxkFCYgFTrHpSI2hxnIFMKCsYOxyVPh/bhUzOYwQxUs+krg32hVYCcLYpS89fazOcxQ
        X4kUF90wFo5xMSW76LD7FbV5RlhsK9RFh1RhV/0LMUbBsDFfUdbSGoL+FxtHi/sr4qlB0b1hTqKkU3BF
        r68B8dSgaB8xJ1HSKbh3SjqFeGpQlG7/cnl5tN7tiSsvAfplzFkEbLcJBXwK2cDI/QF/tRZzTTDSD44j
        bIAIyNPYwcDF194B5iPCgVqXtHpE2pkgGKAxxwZlkwcf/FV6jXGCccxHY44NzAZ5zQvfQ8vyVr3GOMEA
        29+/0khhHc24LxroIrIgmaRhJFjGtCUYABpxN7t8z1igTFDa7XvKdAFqBEhJ2ehgQqxVNUiNGnjS6CJm
        oqGNdWP2GuihRiP4+QqNOTaRHSAboC5ncxuhRga6iNhx7NhcNLApIM8aU5cV1GgFGnPodaF9xEQkA2oD
        3Lx+B0sWakwGFCM4Y6EjgyaHVe7GNfjAF1VXRn9YNAMNxUlv9CDeRdwIwGfYcI2NEUdx/AGagYr5404w
        EQAAAABJRU5ErkJggg==
</value>
  </data>
</root>